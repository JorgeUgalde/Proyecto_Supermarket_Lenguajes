
@using System.Globalization;
@using SuperMarket.Models.ViewModels;
@using SuperMarket.Utilities;
@model OrderVM

<div class="container">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">
                <span>Order #@Model.Order.Id</span>
                @if (@Model.Order.Status == OrderStatus.New)
                {
                    <span class="badge bg-warning pt-2" style="height:50px;">Order State: New</span>
                }
                else if (@Model.Order.Status == OrderStatus.InProgress)
                {
                    <span class="badge bg-warning pt-2" style="height:50px;">Order State: In progress</span>
                }
                else
                {
                    <span class="badge bg-warning pt-2" style="height:50px;">Order State: Finished</span>
                }
            </h2>
        </div>
        <div class="col-6 text-end">
            @if (@Model.Order.Status == OrderStatus.New || @Model.Order.Status == OrderStatus.InProgress)
            {
                <button onclick="updateOrderState(@Model.Order.Id)" class="btn btn-primary">Modify Order Status</button>
            }
            <a asp-controller="ListOrder" asp-action="Index" class="btn btn-primary"> <i class="bi bi-plus-circle"></i>Return</a>
        </div>
    </div>

    <table id="tblData" class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Picture</th>
                <th>Name</th>
                <th>Unit Price</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var order in Model.ProductOrder.ToList())
            {
                <tr>
                    <td>
                        <img  style="height:100;width:100px" src="~/@order.Product.PictureUrl">
                    </td>
                    <td>
                        @order.Product.Name
                    </td>
                    <td>
                        @order.Product.Price.ToString("C", CultureInfo.GetCultureInfo("es-cr"))
                    </td>
                    <td>
                        @order.Quantity
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="text-end pt-1">
        <h5 class="text-primary">
            Total Amount: @Model.Order.ProductOrders.ToList().Sum(x => x.Quantity * x.Product.Price).ToString("C", CultureInfo.GetCultureInfo("es-cr"))
        </h5>
    </div>
</div>

<script>
    // Función para cambiar el estado de la orden
    function updateOrderState(idOrder) {
        // Mostrar cuadro de diálogo de confirmación con opciones de estado
        Swal.fire({
            title: 'Change order state',
            text: 'Select a new order state:',
            icon: 'info',
            showCancelButton: true,
            confirmButtonText: 'Confirm',
            cancelButtonText: 'Cancel',
            input: 'select',
            inputOptions: {
                1: 'New',
                2: 'In Progress',
                3: 'Finished'
            },
            inputValidator: (value) => {
                if (!value) {
                    return 'Please, select a state';
                }
            }
        }).then((result) => {
            if (result.isConfirmed) {
                // Obtener el estado seleccionado por el usuario
                var newState = result.value;

                // Enviar solicitud AJAX al servidor para cambiar el estado de la orden
                $.ajax({
                    url: `/Operator/ListOrder/Update/${idOrder}`,
                    method: 'POST',
                    data: { id: idOrder, status: newState },
                    success: function (response) {
                        // Mostrar mensaje de éxito al usuario
                        Swal.fire('Success', 'Order state updated correctly', 'success');
                        // Recargar la página
                        setTimeout(function () {
                            location.reload();
                        }, 400);
                    },
                    error: function (error) {
                        // Mostrar mensaje de error al usuario
                        Swal.fire('Error', 'An error occured while changing the state', 'error');
                    }
                });
            }
        });
    }
</script>

